services:
  postgres:
    image: postgres:16-alpine
    ports:
      - "127.0.0.1:5432:5432/tcp"
    env_file:
      - config/postgres.env
    volumes:
      - type: volume
        source: postgres-data
        target: /var/lib/postgresql/data
      - type: bind
        source: ./config/init-db.sh
        target: /docker-entrypoint-initdb.d/init-db.sh
        read_only: true

  valkey:
    image: valkey/valkey:7-alpine
    ports:
      - "127.0.0.1:56379:6379/tcp"
    volumes:
      - type: volume
        source: valkey-data
        target: /data
    healthcheck:
      test: ["CMD", "netstat -an | grep 6379 > /dev/null; if [ 0 != $? ]; then exit 1; fi;"]

  eiu-api:
    image: ${DOCKER_REGISTRY-}linkedmink/external-idp-user-api
    build:
      context: .
      target: application
      # platforms:
      #   - "linux/amd64"
      #   - "linux/arm64"
      # cache_from:
      #   - type=registry,ref=${DO}${DOCKER_REGISTRY-}linkedmink/external-idp-user-api:build-cache
      # cache_to:
      #   - type=registry,ref=${DOCKER_REGISTRY-}linkedmink/external-idp-user-api:build-cache,mode=max
      additional_contexts:
        - homedir=${HOME:-.}
    profiles:
      - deploy
    command: node --enable-source-maps --${INSPECT_TYPE:-inspect}=0.0.0.0:9229 main.js
    ports:
      - "127.0.0.1:58080:58080/tcp"
      - "127.0.0.1:9229:9229/tcp"
    env_file:
      - .env
      - config/api-docker.env
    # volumes:
    #   - type: bind
    #     source: ./config/ca.secp384r1.crt
    #     target: /etc/ssl/certs/ca.secp384r1.crt
    #     read_only: true
    secrets:
      - source: jws-key
        target: jws.secp521r1.key
    depends_on:
      - postgres
      - valkey
    develop:
      watch:
        - action: rebuild
          path: src
        - action: rebuild
          path: package-lock.json

  eiu-api-prod:
    extends: eiu-api
    build:
      tags:
        - "${DOCKER_REGISTRY-}linkedmink/external-idp-user-api:${PACKAGE_VERSION:-latest}"
      platforms:
        - "linux/amd64"
        - "linux/arm64"

  eiu-api-dev:
    image: ${DOCKER_REGISTRY-}linkedmink/external-idp-user-api:dev
    build:
      context: .
      target: dev
      # cache_from:
      #   - type=registry,ref=${DOCKER_REGISTRY-}linkedmink/external-idp-user-api:build-cache
      # cache_to:
      #   - type=registry,ref=${DOCKER_REGISTRY-}linkedmink/external-idp-user-api:build-cache,mode=max
      additional_contexts:
        - homedir=${HOME:-.}
    profiles:
      - dev
    ports:
      - "127.0.0.1:58080:58080/tcp"
      - "127.0.0.1:9229:9229/tcp"
    env_file:
      - .env
      - config/api-docker.env
    # volumes:
    #   - type: bind
    #     source: ./config/ca.secp384r1.crt
    #     target: /etc/ssl/certs/ca.secp384r1.crt
    #     read_only: true
    secrets:
      - source: jws-key
        target: jws.secp521r1.key
    depends_on:
      - postgres
      - valkey
    develop:
      watch:
        - action: sync
          path: ./src
          target: /home/node/app/src
        - action: rebuild
          path: package-lock.json

volumes:
  postgres-data:
  valkey-data:

secrets:
  jws-key:
    file: ./config/jws.secp521r1.key
